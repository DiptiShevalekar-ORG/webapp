on:
  pull_request:
    branches:
      - main
  workflow_dispatch :

jobs:
  build:
    name: CI for Packer Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name : Use Node.js Dependencies
        uses : actions/setup-node@v3
        with :
          node-version : '14'
     
      - name : Install Node.js dependencies
        run : |
         cd Dipti_Shevalekar_002245703_01
         npm install

      - name: Install MySQL client
        run: |
         sudo apt-get update
         sudo apt-get install mysql-server
         sudo apt-get install mysql-client
         sudo systemctl start mysql
         sudo systemctl status mysql

      - name: Create Database
        run: |
           mysql -u${{ secrets.DB_USERNAME }} -p${{ secrets.PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DATABASE }};"
           mysql -u${{ secrets.DB_USERNAME }} -p${{ secrets.PASSWORD }} -e "USE ${{ secrets.DATABASE }};" || exit 1
       
      - name: Create zip file
        run: |
         zip -r webapp.zip .
         echo $(pwd)

      # - name: Create env file
      #   run: |
      #       touch .env
      #       echo "PORT=3000" >> .env
      #       echo "DATABASE=trial_db" >> .env
      #       echo "DB_USERNAME=root" >> .env
      #       echo "PASSWORD=Cloud@123" >> .env
      #       echo "HOST=localhost" >> .env
            
         
      - name: Install Packer
        run: |
          wget https://releases.hashicorp.com/packer/1.7.5/packer_1.7.5_linux_amd64.zip
          unzip packer_1.7.5_linux_amd64.zip
          sudo mv packer /usr/local/bin/

      - name: Run `packer init`
        run: |
          cd Dipti_Shevalekar_002245703_01
          packer init packer 

      - name: Run 'packer fmt'
        run: |
            cd Dipti_Shevalekar_002245703_01
            packer fmt -check packer
      
      - name: Run validate
        run: | 
         cd Dipti_Shevalekar_002245703_01
         packer validate packer

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
                credentials_json: ${{ secrets.GCP_SA_KEY }}

      # - name: Build Packer Image
      #   id: packer_build
      #   run: |
      #       cd Dipti_Shevalekar_002245703_01
      #       packer build -except=manifest packer

      - name: GET GCP IMAGE ID
        id: get_image_id
        run: |
            cd Dipti_Shevalekar_002245703_01
            IMAGE_ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)
            echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
            echo "Built GCP image ID is $IMAGE_ID"
             
      - name: Generate version number
        id: versioning
        run: echo "VERSION=$(date +%s)" >> $GITHUB_ENV

      - name: Generate updated instance template
        run: |
          TEMPLATE_NAME="my-template-${{ env.VERSION }}"
          gcloud compute instance-templates create $TEMPLATE_NAME --project=cloudassignment03-413923 --network=webapp-vpc-2 --subnet=webapp-subnet --machine-type=e2-standard-2 --instance-template-region=us-east1 --region=us-east1 --tags=webapp --image="cloud-packer-vm-custom-image" --boot-disk-size=100GB --boot-disk-type="pd-ssd" --instance-template-region="us-east1" --boot-disk-device-name="terraform-instance-template" --service-account="logger-sa-assignment06@cloudassignment03-413923.iam.gserviceaccount.com" --scopes="https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/pubsub,https://www.googleapis.com/auth/cloudkms" --boot-disk-kms-key="projects/cloudassignment03-413923/locations/us-east1/keyRings/kms_key3/cryptoKeys/crypto_sign_key_vm1" --metadata startup-script='#!/bin/bash
          if [ ! -f /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env ]; then
              sudo echo "HOST=10.87.176.2" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              sudo echo "PASSWORD=SaX3PX8GzsmioYd9" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              sudo echo "DB_USERNAME=webapp" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              sudo echo "DATABASE=webapp" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              sudo echo "PORT=3000" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              fi
              sudo chown -R csye6225:csye6225 opt/webappUnzipped/Dipti_Shevalekar_002245703_01
              sudo chmod -R 755 opt/webappUnzipped/Dipti_Shevalekar_002245703_01
              sudo systemctl restart systemdSetup.service
              ' --quiet

      - name: Update Managed Instance Group
        run: |
                gcloud compute instance-groups managed set-instance-template gcp-mig \
                --template=$TEMPLATE_NAME \
                --region=us-east1
        env:
                INSTANCE_GROUP_NAME: gcp-mig
      

           

 


