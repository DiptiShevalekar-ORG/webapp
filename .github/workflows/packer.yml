on:
  pull_request:
    branches:
      - main
  workflow_dispatch :

jobs:
  build:
    name: CI for Packer Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name : Use Node.js Dependencies
        uses : actions/setup-node@v3
        with :
          node-version : '14'
     
      - name : Install Node.js dependencies
        run : |
         cd Dipti_Shevalekar_002245703_01
         npm install

      - name: Install MySQL client
        run: |
         sudo apt-get update
         sudo apt-get install mysql-server
         sudo apt-get install mysql-client
         sudo systemctl start mysql
         sudo systemctl status mysql

      - name: Create Database
        run: |
           mysql -u${{ secrets.DB_USERNAME }} -p${{ secrets.PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DATABASE }};"
           mysql -u${{ secrets.DB_USERNAME }} -p${{ secrets.PASSWORD }} -e "USE ${{ secrets.DATABASE }};" || exit 1
       
      - name: Create zip file
        run: |
         zip -r webapp.zip .
         echo $(pwd)
        
      - name: Install Packer
        run: |
          wget https://releases.hashicorp.com/packer/1.7.5/packer_1.7.5_linux_amd64.zip
          unzip packer_1.7.5_linux_amd64.zip
          sudo mv packer /usr/local/bin/

      - name: Run `packer init`
        run: |
          cd Dipti_Shevalekar_002245703_01
          packer init packer 

      - name: Run 'packer fmt'
        run: |
            cd Dipti_Shevalekar_002245703_01
            packer fmt -check packer
      
      - name: Run validate
        run: | 
         cd Dipti_Shevalekar_002245703_01
         packer validate packer

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
                credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Build Packer Image
        id: packer_build
        run: |
            cd Dipti_Shevalekar_002245703_01
            packer build packer

      - name: GET GCP IMAGE ID
        id: get_image_id
        run: |
            cd Dipti_Shevalekar_002245703_01
            IMAGE_ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)
            echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
            echo "Built GCP image ID is $IMAGE_ID"
             
      - name: Generate version number
        id: versioning
        run: echo "VERSION=$(date +%s)" >> $GITHUB_ENV

      - name: Generate updated instance template
        run: |
          TEMPLATE_NAME="my-template-${{ env.VERSION }}"
          gcloud compute instance-templates create $TEMPLATE_NAME --project=${{ secrets.WEBAPP_PROJECT_ID }} --network=webapp-vpc-2 --subnet=webapp-subnet --machine-type=${{ secrets.WEBAPP_MACHINE_TYPE }} --instance-template-region=${{ secrets.WEBAPP_REGION }} --region=${{ secrets.WEBAPP_REGION }} --tags=${{ secrets.WEBAPP_TAGS }} --image=$IMAGE_ID --boot-disk-size=${{ secrets.WEBAPP_BOOT_DISK_SIZE }} --boot-disk-type="pd-ssd" --boot-disk-device-name="terraform-instance-template" --service-account="${{ secrets.WEBAPP_SERVICEACCOUNT }}" --scopes="${{ secrets.WEBAPP_SCOPES }}" --boot-disk-kms-key="${{ secrets.WEBAPP_BOOT_DISK_KMS_KEY }}" --metadata startup-script='#!/bin/bash
          if [ ! -f /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env ]; then
              sudo echo "HOST=${{ secrets.WEBAPP_HOST }}" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              sudo echo "PASSWORD=${{ secrets.WEBAPP_PASSWORD }}" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              sudo echo "DB_USERNAME=${{ secrets.WEBAPP_DB_USERNAME }}" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              sudo echo "DATABASE=${{ secrets.WEBAPP_DATABASE }}" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              sudo echo "PORT=${{ secrets.WEBAPP_PORT }}" | sudo tee -a /opt/webappUnzipped/Dipti_Shevalekar_002245703_01/.env
              fi
              sudo chown -R csye6225:csye6225 opt/webappUnzipped/Dipti_Shevalekar_002245703_01
              sudo chmod -R 755 opt/webappUnzipped/Dipti_Shevalekar_002245703_01
              sudo systemctl restart systemdSetup.service
              ' --quiet


      - name: Start Rolling Update
        run: |
                gcloud compute instance-groups managed rolling-action start-update gcp-mig \
                --version='template=projects/${{ secrets.WEBAPP_PROJECT_ID }}/regions/${{ secrets.WEBAPP_REGION }}/instanceTemplates/my-template-${{ env.VERSION }}' \
                --region="${{ secrets.WEBAPP_REGION }}" \
                --project="${{ secrets.WEBAPP_PROJECT_ID }}" \
         
      - name: Wait for refresh to complete
        run: |
                gcloud compute instance-groups managed wait-until gcp-mig \
                --version-target-reached \
                --region ${{ secrets.WEBAPP_REGION }}